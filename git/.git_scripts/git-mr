#!/bin/bash

function help() {
  echo "Usage: git mr [push|create|status] <version>"
}

function test_origin_working_branch_exist() {
  if [[ -n $(git branch -a | grep "origin/${WORKING_BRANCH}") ]]; then
    return 0
  fi
  return 1
}

function sync() {
  test_origin_working_branch_exist
  if (( $? == 1 )); then
    return 1
  fi
  
  if [[ -n $(git ls-remote origin $WORKING_BRANCH) ]]; then
    return 1
  fi

  # Sync with remote branch
  git fetch origin $BASE_BRANCH:$BASE_BRANCH

  local_changes=$(git status -s)

  # Save current changes
  if [[ -n $local_changes ]]; then
    git stash push -uq
  fi

  # Rebase to base branch
  # 
  #  o---o---o---o---o---o---o (dev_5.3)
  #       \         /
  #        o---o---o---A---B (HEAD -> dev_5.3_zhipingyu)
  #         \     
  #          o---o---o (origin/dev_5.3_zhipingyu)
  #
  #  $ git rebase â€“-onto <new-parent> <old-parent> <head-of-new-parent>
  #
  #  o---o---o---o---o---o---o (dev_5.3)
  #                           \
  #                            A---B  (dev_5.3_zhipingyu)
  git rebase --onto $BASE_BRANCH origin/$WORKING_BRANCH

  # Load current changes
  if [[ -n $local_changes ]]; then
    git stash pop -q
  fi

  # Delete old remote track
  git branch -q -rd origin/$WORKING_BRANCH
  git branch --unset-upstream
}

function status() {
  sync 
  
  LOCAL_START_COMMIT=${BASE_BRANCH}
  REMOTE_START_COMMIT=$(git merge-base ${WORKING_BRANCH} ${BASE_BRANCH})
  test_origin_working_branch_exist
  if (( $? == 0 )); then
    LOCAL_START_COMMIT="origin/${WORKING_BRANCH}"
  fi
  
  echo "Local changes"
  git status -s
  echo
  echo -e "Commits history"
  git log --pretty=format:"%C(magenta)%h%Creset %s" $LOCAL_START_COMMIT...${WORKING_BRANCH}
  echo "-------"
  git log --pretty=format:"%C(yellow)%h%Creset %s" $REMOTE_START_COMMIT...${LOCAL_START_COMMIT}
}

function push() {
  sync
  
  test_origin_working_branch_exist
  if (( $? == 0 )); then
    git push
  else
    git push -u origin $WORKING_BRANCH
  fi
}

function create() {
  if [[ -z $(git ls-remote origin $WORKING_BRANCH) ]]; then
    echo    "Branch ${WORKING_BRANCH} have not been pushed to remote repo yet."
    echo -e "Use \033[33mgit mr push $VERSION\033[0m to push them"
    exit 1
  fi

  host=$(git config remote.origin.url | perl -snle "print m/:((?!\.git)(.*)+)\.git/")
  open "https://git.17zjh.com/$host/-/merge_requests/new?merge_request%5Bsource_branch%5D=${WORKING_BRANCH}&merge_request%5Btarget_branch%5D=${BASE_BRANCH}"
}

COMMAND=$1
case $COMMAND in
  push|create|status) 
    VERSION=$2
    
    # User not set version
    if [[ -z $VERSION ]]; then
      help
      exit 1
    fi
    
    CURRENT_BRANCH=$(git branch --show-current)
    BASE_BRANCH="dev_${VERSION}"
    WORKING_BRANCH="${BASE_BRANCH}_$(whoami)"
    
    # Ensure we are at the right branch
    if [[ $CURRENT_BRANCH != $WORKING_BRANCH ]]; then
      echo "On the wrong branch, please checkout to $WORKING_BRANCH"
      exit 1
    fi

    $COMMAND
    ;;
  *) help ;;
esac
